How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Cause I don't have to peruse the whole file, only the parts that contain the bug, supposing that the old version worked.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can see the effects of changes. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Advantages:
    
    -When working with a programming language, automatically saved files often don't work or even compile.
    -You can make logical commits.
    
    Disadvantages:
    
    -You can loose your work in case of disaster (hanged PC, electrical failure,...) or human error.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I don't know, I suppose as Git is focused in software development, it is a must.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
