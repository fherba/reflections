What happens when you initialize a repository? Why do you need to do it?

  When you initialize a repository, git creates a hidden directory called .git with the necessary metadata. It is needed for tracking repository files and history.

How is the staging area different from the working directory and the repository? What value do you think it offers?

  I suppose staging area is a virtual space, unlike repository and working directory.It shows the files that can be committed.

How can you use the staging area to make sure you have one commit per logical change?

  Just filling the staging area only with the files I want to commit, and assuring they contain logically related changes.
  
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  When you want to test a new feature without breaking anything, or if not sure of how to make something and you try several options. Branches can show clearly which version are you working in.
  
How do the diagrams help you visualize the branch structure?

  Diagrams let you see the entire repository tree at a glance. They are great !!
  
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  The result will be a commit that includes the changes made respect to the last common commit (if I understood).
